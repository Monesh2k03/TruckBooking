import React, { useEffect, useState } from 'react';
import { useNavigate } from 'react-router-dom';
import {
  TextField, Button, Radio, RadioGroup, FormControlLabel, FormControl,
  FormLabel, Checkbox, FormGroup, Select, MenuItem, InputLabel, Typography,
  Grid, Box, Card
} from '@mui/material';
import { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';
import { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';
import { DatePicker } from '@mui/x-date-pickers/DatePicker';
import dayjs from 'dayjs';

const CustomerForm = ({ onSubmit, initialData = null }) => {
  const [formData, setFormData] = useState(
    initialData || {
      fname: '', lname: '', password: '', date: '',
      course: '', languages: [], district: ''
    }
  );
  const navigate = useNavigate();


  useEffect(() => {
    if (initialData) setFormData(initialData);
  }, [initialData]);

  const handleChange = (e) => {
    const { name, value, type, checked } = e.target;
    if (type === 'checkbox') {
      setFormData(prev => ({
        ...prev,
        languages: checked
          ? [...prev.languages, value]
          : prev.languages.filter(lang => lang !== value)
      }));
    } else {
      setFormData(prev => ({ ...prev, [name]: value }));
    }
  };

  const handleDateChange = (newDate) => {
    setFormData(prev => ({
      ...prev,
      date: newDate ? dayjs(newDate).format('YYYY-MM-DD') : ''
    }));
  };

  const handleReset = () => {
    setFormData({
      fname: '', lname: '', password: '', date: '',
      course: '', languages: [], district: ''
    });
  };

  const handleSubmit = () => {
    const { fname, lname, password, date, course, languages, district } = formData;
    if (!fname || !lname || !password || !date || !course || languages.length === 0 || !district) {
      alert('Please fill out all fields and select at least one language.');
      return;
    }
    const fullName = `${fname} ${lname}`;
    onSubmit({ ...formData, fullname: fullName });
    handleReset();
    navigate('/');
  };

  return (
    <Box sx={{ display: 'flex', justifyContent: 'center', mt: 4 }}>
      <Card sx={{ width: '100%', maxWidth: 550, p: 4, boxShadow: 3 }}>
        <Typography variant="h5" align="center" gutterBottom>
          Customer Form
        </Typography>

        <Grid container spacing={1}>
          <Grid item xs={12} sm={6}>
            <TextField
              fullWidth label="First Name" name="fname"
              value={formData.fname} onChange={handleChange}
            />
          </Grid>
          <Grid item xs={12} sm={6}>
            <TextField
              fullWidth label="Last Name" name="lname"
              value={formData.lname} onChange={handleChange}
            />
          </Grid>

          <Grid item xs={12}>
            <TextField
              fullWidth label="Full Name"
              value={`${formData.fname} ${formData.lname}`} disabled
            />
          </Grid>

          <Grid item xs={12}>
            <TextField
              fullWidth label="Password" type="password"
              name="password" value={formData.password}
              onChange={handleChange}
            />
          </Grid>

          <Grid item xs={12} sx={{width:"95%"}}>
            <LocalizationProvider dateAdapter={AdapterDayjs}>
              <DatePicker
                label    ="Date of Birth"
                value    ={formData.date ? dayjs(formData.date) : null}
                onChange ={handleDateChange}
                slotProps={{ textField: { fullWidth: true } }}
              />
            </LocalizationProvider>
          </Grid>

          <Grid item xs={12} >
            <FormControl component="fieldset" fullWidth>
              <FormLabel>Course</FormLabel>
              <RadioGroup row 
                  name     ="course" 
                  value    ={formData.course} 
                  onChange ={handleChange}>
                {['FrontEnd', 'Backend', 'Fullstack'].map(option => (
                  <FormControlLabel
                    key    ={option} value={option}
                    control={<Radio />} label={option}
                  />
                ))}
              </RadioGroup>
            </FormControl>
          </Grid>

          <Grid item xs={12}>
            <FormControl component="fieldset" fullWidth>
              <FormLabel>Languages</FormLabel>
              <FormGroup row>
                {['HTML', 'CSS', 'Bootstrap', 'Javascript'].map(lang => (
                  <FormControlLabel
                    key={lang}
                    control={
                      <Checkbox
                        name     ="languages" value={lang}
                        checked  ={formData.languages.includes(lang)}
                        onChange ={handleChange}
                      />
                    }
                    label={lang}
                  />
                ))}
              </FormGroup>
            </FormControl>
          </Grid>

          <Grid item xs={12} sx={{width:"95%"}}>
            <FormControl fullWidth>
              <InputLabel>District</InputLabel>
              <Select
                name="district" label="District"
                value={formData.district} onChange={handleChange}
              >
                <MenuItem value="">-- Select District --</MenuItem>
                <MenuItem value="Chennai">Chennai</MenuItem>
                <MenuItem value="Tiruvallur">Tiruvallur</MenuItem>
                <MenuItem value="Kanchipuram">Kanchipuram</MenuItem>
                <MenuItem value="Ranipet">Ranipet</MenuItem>
              </Select>
            </FormControl>
          </Grid>

          <Grid sx={{display:'flex',justifyContent:"space-around",width:'100%'}}>
          <Grid item xs={12} sx={{width:"40%"}}>
            <Button variant="contained" color="primary" fullWidth onClick={handleSubmit}>
              Submit
            </Button>
          </Grid>
          <Grid item xs={12} sx={{width:"40%"}}>
            <Button variant="outlined" color="secondary" fullWidth onClick={handleReset}>
              Reset
            </Button>
          </Grid>
          </Grid>
        </Grid>
      </Card>
    </Box>
  );
};

export default CustomerForm;
